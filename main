#include <stdio.h>

#define SIZE 9     
#define EMPTY 0    

int sudokuBoard[SIZE][SIZE];  

void printPuzzle() {
    for (int row = 0; row < SIZE; row++) {
        for (int col = 0; col < SIZE; col++) {
            printf("%d ", sudokuBoard[row][col]);  
        }
        printf("\n");  
    }
}

int isValidPuzzle(int row, int col, int num) {
    for (int i = 0; i < SIZE; i++) {
        if (sudokuBoard[row][i] == num || sudokuBoard[i][col] == num) {
            return 0;  
        }
    }

    int boxRow = (row / 3) * 3;
    int boxCol = (col / 3) * 3;
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            if (sudokuBoard[boxRow + i][boxCol + j] == num) {
                return 0;  
            }
        }
    }

    return 1;  
}

int solvePuzzle() {
    for (int row = 0; row < SIZE; row++) {
        for (int col = 0; col < SIZE; col++) {
            if (sudokuBoard[row][col] == EMPTY) {  
                for (int num = 1; num <= SIZE; num++) {
                    if (isValidPuzzle(row, col, num)) {
                        sudokuBoard[row][col] = num;  

                        if (solvePuzzle()) {
                            return 1;  
                        }

                        sudokuBoard[row][col] = EMPTY;  
                    }
                }
                return 0;  
            }
        }
    }
    return 1;  
}

int main() {
    printf("Welcome to Sudoku!\n");

    printf("Enter the initial puzzle (9x9 grid):\n");
    for (int row = 0; row < SIZE; row++) {
        for (int col = 0; col < SIZE; col++) {
            scanf("%d", &sudokuBoard[row][col]);  
        }
    }

    printf("Initial puzzle:\n");
    printPuzzle();

    if (solvePuzzle()) {
        printf("\nSolution:\n");
        printPuzzle();
    } else {
        printf("\nNo solution found.\n");
    }

    return 0;
}
